<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.DishOrderMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.entity.DishOrder" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <id column="dish_id" property="dishId" jdbcType="INTEGER" />
    <result column="dish_state" property="dishState" jdbcType="INTEGER" />
    <result column="count" property="count" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >order_id, dish_id, dish_state, count
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.entity.DishOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dishorder
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByTest" resultType="java.util.Map" parameterType="Map" >
    SELECT distinct dish_name,table_id,dish_state,count
    FROM dishes
    INNER JOIN dishorder
    ON dishes.dish_id = dishorder.dish_id
    INNER JOIN orderinfo
    ON dishorder.order_id = orderinfo.order_id
    <trim prefix="where" suffixOverrides="and">
      <if test="dishName != null and dishName != ''">
        dish_name = #{dishName,jdbcType=VARCHAR} and
      </if>
      <if test="tableId != null">
        table_id = #{tableId,jdbcType=INTEGER} and
      </if>
      <if test="dishState != null">
        dish_state = #{dishState,jdbcType=INTEGER} and
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER} and
      </if>
    </trim>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.example.demo.entity.DishOrderKey" >
    select dish_name,table_id,dish_state,count
    from dishorder,dishes,orderinfo
    where dishorder.order_id = #{orderId,jdbcType=INTEGER} and dishorder.order_id = orderinfo.order_id
      and dishorder.dish_id = #{dishId,jdbcType=INTEGER} and dishorder.dish_id = dishes.dish_id
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.demo.entity.DishOrderKey" >
    delete from dishorder
    where order_id = #{orderId,jdbcType=INTEGER}
      and dish_id = #{dishId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.DishOrderExample" >
    delete from dishorder
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.DishOrder" >
    insert into dishorder (order_id, dish_id, dish_state, count)
    values (#{orderId,jdbcType=INTEGER}, #{dishId,jdbcType=INTEGER}, #{dishState,jdbcType=INTEGER}, 
      #{count,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.DishOrder" >

    insert into dishorder
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="dishId != null" >
        dish_id,
      </if>
      <if test="dishState != null" >
        dish_state,
      </if>
      <if test="count != null" >
        count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="dishId != null" >
        #{dishId,jdbcType=INTEGER},
      </if>
      <if test="dishState != null" >
        #{dishState,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.DishOrderExample" resultType="java.lang.Integer" >
    select count(*) from dishorder
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update dishorder
    <set >
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.dishId != null" >
        dish_id = #{record.dishId,jdbcType=INTEGER},
      </if>
      <if test="record.dishState != null" >
        dish_state = #{record.dishState,jdbcType=INTEGER},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update dishorder
    set order_id = #{record.orderId,jdbcType=INTEGER},
      dish_id = #{record.dishId,jdbcType=INTEGER},
      dish_state = #{record.dishState,jdbcType=INTEGER},
      count = #{record.count,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.DishOrder" >
    update dishorder
    <set >
      <if test="dishState != null" >
        dish_state = #{dishState,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
      and dish_id = #{dishId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.DishOrder" >
    update dishorder
    set dish_state = dish_state+1
    where order_id = #{orderId,jdbcType=INTEGER}
      and dish_id = #{dishId,jdbcType=INTEGER}
  </update>
</mapper>
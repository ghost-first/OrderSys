<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.OrderInfoMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.entity.OrderInfo" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="order_time" property="orderTime" jdbcType="TIMESTAMP" />
    <result column="table_id" property="tableId" jdbcType="INTEGER" />
    <result column="order_state" property="orderState" jdbcType="INTEGER" />
    <result column="waiter" property="waiter" jdbcType="VARCHAR" />
    <result column="total_price" property="totalPrice" jdbcType="DOUBLE" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="add_order" property="addOrder" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 24 09:38:47 CST 2022.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >order_id, order_time, table_id, order_state, waiter, total_price, remarks</sql>
<!--  筛选历史数据
3.1 by manyuan-->
  <select id="get7DaysData" resultType="java.util.Map">
    SELECT order_time,SUM(total_price)
    FROM orderinfo
    WHERE (TO_DAYS(order_time)-TO_DAYS(NOW()))&lt;7
    GROUP BY TO_DAYS(order_time);
  </select>
<!--     List<Map<String, Object>> getSixMonthsData(); -->
  <select id="getSixMonthsData" resultType="java.util.Map">
    select date_format(order_time,"%Y-%c") as time_info,sum(total_price)
    from orderinfo where order_time between date_sub(now(), interval 6 month) and now()
    group by date_format(order_time,"%Y-%M");
  </select>

  <select id="queryOrder" parameterType="com.example.demo.entity.OrderInfo" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from orderinfo
    <where>
      <if test="orderId != null">
        and order_id = #{orderId,jdbcType=INTEGER}
      </if>
      <if test="orderState != null">
        and order_state = #{orderState,jdbcType=INTEGER}
      </if>
      <if test="tableId != null">
        and table_id = #{tableId,jdbcType=INTEGER}
      </if>
        and order_id not in (select add_order from orderinfo where add_order !=0);
    </where>
  </select>

<!--     List<Map<String, Object>> queryOrderDetail(int orderId); -->
  <select id="queryOrderDetail" parameterType="java.lang.Integer" resultType="java.util.Map">
    select dish_id,dish_name,count,dish_state,price
    from orderinfo natural join dishorder natural join dishes
    <if test="orderId != null">
      where order_id = #{orderId,jdbcType=INTEGER};
    </if>
  </select>

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.entity.OrderInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orderinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orderinfo
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orderinfo
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.OrderInfoExample" >
    delete from orderinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.OrderInfo"  useGeneratedKeys="true" keyProperty="orderId">
    insert into orderinfo (order_id, order_time, table_id,
      order_state, waiter, total_price,
      remarks, add_order)
    values (#{orderId,jdbcType=INTEGER}, #{orderTime,jdbcType=TIMESTAMP}, #{tableId,jdbcType=INTEGER},
      #{orderState,jdbcType=INTEGER}, #{waiter,jdbcType=VARCHAR}, #{totalPrice,jdbcType=DOUBLE},
      #{remarks,jdbcType=VARCHAR}, #{addOrder,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.OrderInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 24 09:38:47 CST 2022.
    -->
    insert into orderinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="orderTime != null" >
        order_time,
      </if>
      <if test="tableId != null" >
        table_id,
      </if>
      <if test="orderState != null" >
        order_state,
      </if>
      <if test="waiter != null" >
        waiter,
      </if>
      <if test="totalPrice != null" >
        total_price,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="addOrder != null" >
        add_order,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderTime != null" >
        #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tableId != null" >
        #{tableId,jdbcType=INTEGER},
      </if>
      <if test="orderState != null" >
        #{orderState,jdbcType=INTEGER},
      </if>
      <if test="waiter != null" >
        #{waiter,jdbcType=VARCHAR},
      </if>
      <if test="totalPrice != null" >
        #{totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="addOrder != null" >
        #{addOrder,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.OrderInfoExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 24 09:38:47 CST 2022.
    -->
    select count(*) from orderinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update orderinfo
    <set >
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.orderTime != null" >
        order_time = #{record.orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tableId != null" >
        table_id = #{record.tableId,jdbcType=INTEGER},
      </if>
      <if test="record.orderState != null" >
        order_state = #{record.orderState,jdbcType=INTEGER},
      </if>
      <if test="record.waiter != null" >
        waiter = #{record.waiter,jdbcType=VARCHAR},
      </if>
      <if test="record.totalPrice != null" >
        total_price = #{record.totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.addOrder != null" >
        add_order = #{record.addOrder,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update orderinfo
    set order_id = #{record.orderId,jdbcType=INTEGER},
    order_time = #{record.orderTime,jdbcType=TIMESTAMP},
    table_id = #{record.tableId,jdbcType=INTEGER},
    order_state = #{record.orderState,jdbcType=INTEGER},
    waiter = #{record.waiter,jdbcType=VARCHAR},
    total_price = #{record.totalPrice,jdbcType=DOUBLE},
    remarks = #{record.remarks,jdbcType=VARCHAR},
    add_order = #{record.addOrder,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.OrderInfo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Feb 24 09:38:47 CST 2022.
    -->
    update orderinfo
    <set >
      <if test="orderTime != null" >
        order_time = #{orderTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tableId != null" >
        table_id = #{tableId,jdbcType=INTEGER},
      </if>
      <if test="orderState != null" >
        order_state = #{orderState,jdbcType=INTEGER},
      </if>
      <if test="waiter != null" >
        waiter = #{waiter,jdbcType=VARCHAR},
      </if>
      <if test="totalPrice != null" >
        total_price = #{totalPrice,jdbcType=DOUBLE},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="addOrder != null" >
        add_order = #{addOrder,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.OrderInfo" >
    update orderinfo
    set order_time = #{orderTime,jdbcType=TIMESTAMP},
      table_id = #{tableId,jdbcType=INTEGER},
      order_state = #{orderState,jdbcType=INTEGER},
      waiter = #{waiter,jdbcType=VARCHAR},
      total_price = #{totalPrice,jdbcType=DOUBLE},
      remarks = #{remarks,jdbcType=VARCHAR},
      add_order = #{addOrder,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>